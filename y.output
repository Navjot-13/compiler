Terminals unused in grammar

    TRU
    FLS
    BRK
    RETURN
    CMNT
    MLTI_CMNT
    INP


Grammar

    0 $accept: program $end

    1 program: func_list BGN statements

    2 func_list: func_list function
    3          | %empty

    4 function: data_type ID '(' params ')' statements

    5 params: param_list
    6       | %empty

    7 param_list: param_list ',' param_type
    8           | param_type

    9 param_type: data_type ID

   10 args: arg_list
   11     | %empty

   12 arg_list: arg_list ',' expr
   13         | expr

   14 statements: '{' stmt_list '}'
   15           | stmt

   16 stmt_list: stmt_list stmt
   17          | stmt

   18 stmt: assign_stmt
   19     | cond_stmt
   20     | loop_stmt
   21     | array_decl
   22     | expressions

   23 assign_stmt: data_type L SCOL

   24 L: L ',' ID
   25  | ID

   26 array_decl: ARR '<' data_type ',' INT_CONST '>' ID SCOL

   27 expressions: expr SCOL

   28 expr: variable ASSIGN expr
   29     | variable AEQ expr
   30     | variable SEQ expr
   31     | variable MEQ expr
   32     | variable DEQ expr
   33     | variable INCR
   34     | variable DECR
   35     | cond_or_stmt

   36 variable: ID
   37         | ID '(' args ')'
   38         | arr_variable

   39 arr_variable: ID '[' expr ']'
   40             | arr_variable '[' expr ']'

   41 cond_or_stmt: cond_or_stmt OR cond_and_stmt
   42             | cond_and_stmt

   43 cond_and_stmt: cond_and_stmt AND eql_stmt
   44              | eql_stmt

   45 eql_stmt: eql_stmt EQ comp_stmt
   46         | eql_stmt NEQ comp_stmt
   47         | comp_stmt

   48 comp_stmt: comp_stmt comp_op arithmetic_stmt1
   49          | arithmetic_stmt1

   50 comp_op: '>'
   51        | '<'
   52        | GEQ
   53        | LEQ

   54 arithmetic_stmt1: arithmetic_stmt1 ADD arithmetic_stmt2
   55                 | arithmetic_stmt1 SUB arithmetic_stmt2
   56                 | arithmetic_stmt2

   57 arithmetic_stmt2: arithmetic_stmt2 MUL unary_op_stmt
   58                 | arithmetic_stmt2 DIV unary_op_stmt
   59                 | unary_op_stmt

   60 unary_op_stmt: NOT unary_op_stmt
   61              | ADD unary_op_stmt
   62              | SUB unary_op_stmt
   63              | variable
   64              | constant

   65 cond_stmt: IF '(' expr ')' '{' stmt_list '}' cond_stmt2

   66 cond_stmt2: ELSE stmt
   67           | %empty

   68 loop_stmt: LP '(' expr ')' statements

   69 data_type: INT
   70          | DCML
   71          | STR
   72          | BOOL

   73 constant: INT_CONST
   74         | DCML_CONST
   75         | STR_CONST


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 4 37 65 68
    ')' (41) 4 37 65 68
    ',' (44) 7 12 24 26
    '<' (60) 26 51
    '>' (62) 26 50
    '[' (91) 39 40
    ']' (93) 39 40
    '{' (123) 14 65
    '}' (125) 14 65
    error (256)
    ADD (258) 54 61
    SUB (259) 55 62
    MUL (260) 57
    DIV (261) 58
    ASSIGN (262) 28
    EQ (263) 45
    NEQ (264) 46
    TRU (265)
    FLS (266)
    AND (267) 43
    OR (268) 41
    NOT (269) 60
    INT (270) 69
    DCML (271) 70
    BOOL (272) 72
    STR (273) 71
    SCOL (274) 23 26 27
    ID (275) 4 9 24 25 26 36 37 39
    BGN (276) 1
    AEQ (277) 29
    MEQ (278) 31
    SEQ (279) 30
    DEQ (280) 32
    INCR (281) 33
    DECR (282) 34
    GEQ (283) 52
    LEQ (284) 53
    ARR (285) 26
    IF (286) 65
    ELSE (287) 66
    LP (288) 68
    BRK (289)
    RETURN (290)
    CMNT (291)
    MLTI_CMNT (292)
    INP (293)
    INT_CONST <int_val> (294) 26 73
    DCML_CONST <double_val> (295) 74
    STR_CONST <str_val> (296) 75


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    program (52)
        on left: 1
        on right: 0
    func_list (53)
        on left: 2 3
        on right: 1 2
    function (54)
        on left: 4
        on right: 2
    params (55)
        on left: 5 6
        on right: 4
    param_list (56)
        on left: 7 8
        on right: 5 7
    param_type (57)
        on left: 9
        on right: 7 8
    args (58)
        on left: 10 11
        on right: 37
    arg_list (59)
        on left: 12 13
        on right: 10 12
    statements (60)
        on left: 14 15
        on right: 1 4 68
    stmt_list (61)
        on left: 16 17
        on right: 14 16 65
    stmt (62)
        on left: 18 19 20 21 22
        on right: 15 16 17 66
    assign_stmt (63)
        on left: 23
        on right: 18
    L <int_val> (64)
        on left: 24 25
        on right: 23 24
    array_decl (65)
        on left: 26
        on right: 21
    expressions (66)
        on left: 27
        on right: 22
    expr (67)
        on left: 28 29 30 31 32 33 34 35
        on right: 12 13 27 28 29 30 31 32 39 40 65 68
    variable (68)
        on left: 36 37 38
        on right: 28 29 30 31 32 33 34 63
    arr_variable (69)
        on left: 39 40
        on right: 38 40
    cond_or_stmt (70)
        on left: 41 42
        on right: 35 41
    cond_and_stmt (71)
        on left: 43 44
        on right: 41 42 43
    eql_stmt (72)
        on left: 45 46 47
        on right: 43 44 45 46
    comp_stmt (73)
        on left: 48 49
        on right: 45 46 47 48
    comp_op (74)
        on left: 50 51 52 53
        on right: 48
    arithmetic_stmt1 <int_val> (75)
        on left: 54 55 56
        on right: 48 49 54 55
    arithmetic_stmt2 <int_val> (76)
        on left: 57 58 59
        on right: 54 55 56 57 58
    unary_op_stmt <int_val> (77)
        on left: 60 61 62 63 64
        on right: 57 58 59 60 61 62
    cond_stmt (78)
        on left: 65
        on right: 19
    cond_stmt2 (79)
        on left: 66 67
        on right: 65
    loop_stmt (80)
        on left: 68
        on right: 20
    data_type <int_val> (81)
        on left: 69 70 71 72
        on right: 4 9 23 26
    constant (82)
        on left: 73 74 75
        on right: 64


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (func_list)

    program    go to state 1
    func_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: func_list . BGN statements
    2 func_list: func_list . function

    INT   shift, and go to state 4
    DCML  shift, and go to state 5
    BOOL  shift, and go to state 6
    STR   shift, and go to state 7
    BGN   shift, and go to state 8

    function   go to state 9
    data_type  go to state 10


State 3

    0 $accept: program $end .

    $default  accept


State 4

   69 data_type: INT .

    $default  reduce using rule 69 (data_type)


State 5

   70 data_type: DCML .

    $default  reduce using rule 70 (data_type)


State 6

   72 data_type: BOOL .

    $default  reduce using rule 72 (data_type)


State 7

   71 data_type: STR .

    $default  reduce using rule 71 (data_type)


State 8

    1 program: func_list BGN . statements

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    INT         shift, and go to state 4
    DCML        shift, and go to state 5
    BOOL        shift, and go to state 6
    STR         shift, and go to state 7
    ID          shift, and go to state 14
    ARR         shift, and go to state 15
    IF          shift, and go to state 16
    LP          shift, and go to state 17
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20
    '{'         shift, and go to state 21

    statements        go to state 22
    stmt              go to state 23
    assign_stmt       go to state 24
    array_decl        go to state 25
    expressions       go to state 26
    expr              go to state 27
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    cond_stmt         go to state 37
    loop_stmt         go to state 38
    data_type         go to state 39
    constant          go to state 40


State 9

    2 func_list: func_list function .

    $default  reduce using rule 2 (func_list)


State 10

    4 function: data_type . ID '(' params ')' statements

    ID  shift, and go to state 41


State 11

   61 unary_op_stmt: ADD . unary_op_stmt

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    variable       go to state 42
    arr_variable   go to state 29
    unary_op_stmt  go to state 43
    constant       go to state 40


State 12

   62 unary_op_stmt: SUB . unary_op_stmt

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    variable       go to state 42
    arr_variable   go to state 29
    unary_op_stmt  go to state 44
    constant       go to state 40


State 13

   60 unary_op_stmt: NOT . unary_op_stmt

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    variable       go to state 42
    arr_variable   go to state 29
    unary_op_stmt  go to state 45
    constant       go to state 40


State 14

   36 variable: ID .
   37         | ID . '(' args ')'
   39 arr_variable: ID . '[' expr ']'

    '('  shift, and go to state 46
    '['  shift, and go to state 47

    $default  reduce using rule 36 (variable)


State 15

   26 array_decl: ARR . '<' data_type ',' INT_CONST '>' ID SCOL

    '<'  shift, and go to state 48


State 16

   65 cond_stmt: IF . '(' expr ')' '{' stmt_list '}' cond_stmt2

    '('  shift, and go to state 49


State 17

   68 loop_stmt: LP . '(' expr ')' statements

    '('  shift, and go to state 50


State 18

   73 constant: INT_CONST .

    $default  reduce using rule 73 (constant)


State 19

   74 constant: DCML_CONST .

    $default  reduce using rule 74 (constant)


State 20

   75 constant: STR_CONST .

    $default  reduce using rule 75 (constant)


State 21

   14 statements: '{' . stmt_list '}'

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    INT         shift, and go to state 4
    DCML        shift, and go to state 5
    BOOL        shift, and go to state 6
    STR         shift, and go to state 7
    ID          shift, and go to state 14
    ARR         shift, and go to state 15
    IF          shift, and go to state 16
    LP          shift, and go to state 17
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    stmt_list         go to state 51
    stmt              go to state 52
    assign_stmt       go to state 24
    array_decl        go to state 25
    expressions       go to state 26
    expr              go to state 27
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    cond_stmt         go to state 37
    loop_stmt         go to state 38
    data_type         go to state 39
    constant          go to state 40


State 22

    1 program: func_list BGN statements .

    $default  reduce using rule 1 (program)


State 23

   15 statements: stmt .

    $default  reduce using rule 15 (statements)


State 24

   18 stmt: assign_stmt .

    $default  reduce using rule 18 (stmt)


State 25

   21 stmt: array_decl .

    $default  reduce using rule 21 (stmt)


State 26

   22 stmt: expressions .

    $default  reduce using rule 22 (stmt)


State 27

   27 expressions: expr . SCOL

    SCOL  shift, and go to state 53


State 28

   28 expr: variable . ASSIGN expr
   29     | variable . AEQ expr
   30     | variable . SEQ expr
   31     | variable . MEQ expr
   32     | variable . DEQ expr
   33     | variable . INCR
   34     | variable . DECR
   63 unary_op_stmt: variable .

    ASSIGN  shift, and go to state 54
    AEQ     shift, and go to state 55
    MEQ     shift, and go to state 56
    SEQ     shift, and go to state 57
    DEQ     shift, and go to state 58
    INCR    shift, and go to state 59
    DECR    shift, and go to state 60

    $default  reduce using rule 63 (unary_op_stmt)


State 29

   38 variable: arr_variable .
   40 arr_variable: arr_variable . '[' expr ']'

    '['  shift, and go to state 61

    $default  reduce using rule 38 (variable)


State 30

   35 expr: cond_or_stmt .
   41 cond_or_stmt: cond_or_stmt . OR cond_and_stmt

    OR  shift, and go to state 62

    $default  reduce using rule 35 (expr)


State 31

   42 cond_or_stmt: cond_and_stmt .
   43 cond_and_stmt: cond_and_stmt . AND eql_stmt

    AND  shift, and go to state 63

    $default  reduce using rule 42 (cond_or_stmt)


State 32

   44 cond_and_stmt: eql_stmt .
   45 eql_stmt: eql_stmt . EQ comp_stmt
   46         | eql_stmt . NEQ comp_stmt

    EQ   shift, and go to state 64
    NEQ  shift, and go to state 65

    $default  reduce using rule 44 (cond_and_stmt)


State 33

   47 eql_stmt: comp_stmt .
   48 comp_stmt: comp_stmt . comp_op arithmetic_stmt1

    GEQ  shift, and go to state 66
    LEQ  shift, and go to state 67
    '<'  shift, and go to state 68
    '>'  shift, and go to state 69

    $default  reduce using rule 47 (eql_stmt)

    comp_op  go to state 70


State 34

   49 comp_stmt: arithmetic_stmt1 .
   54 arithmetic_stmt1: arithmetic_stmt1 . ADD arithmetic_stmt2
   55                 | arithmetic_stmt1 . SUB arithmetic_stmt2

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72

    $default  reduce using rule 49 (comp_stmt)


State 35

   56 arithmetic_stmt1: arithmetic_stmt2 .
   57 arithmetic_stmt2: arithmetic_stmt2 . MUL unary_op_stmt
   58                 | arithmetic_stmt2 . DIV unary_op_stmt

    MUL  shift, and go to state 73
    DIV  shift, and go to state 74

    $default  reduce using rule 56 (arithmetic_stmt1)


State 36

   59 arithmetic_stmt2: unary_op_stmt .

    $default  reduce using rule 59 (arithmetic_stmt2)


State 37

   19 stmt: cond_stmt .

    $default  reduce using rule 19 (stmt)


State 38

   20 stmt: loop_stmt .

    $default  reduce using rule 20 (stmt)


State 39

   23 assign_stmt: data_type . L SCOL

    ID  shift, and go to state 75

    L  go to state 76


State 40

   64 unary_op_stmt: constant .

    $default  reduce using rule 64 (unary_op_stmt)


State 41

    4 function: data_type ID . '(' params ')' statements

    '('  shift, and go to state 77


State 42

   63 unary_op_stmt: variable .

    $default  reduce using rule 63 (unary_op_stmt)


State 43

   61 unary_op_stmt: ADD unary_op_stmt .

    $default  reduce using rule 61 (unary_op_stmt)


State 44

   62 unary_op_stmt: SUB unary_op_stmt .

    $default  reduce using rule 62 (unary_op_stmt)


State 45

   60 unary_op_stmt: NOT unary_op_stmt .

    $default  reduce using rule 60 (unary_op_stmt)


State 46

   37 variable: ID '(' . args ')'

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    $default  reduce using rule 11 (args)

    args              go to state 78
    arg_list          go to state 79
    expr              go to state 80
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 47

   39 arr_variable: ID '[' . expr ']'

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    expr              go to state 81
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 48

   26 array_decl: ARR '<' . data_type ',' INT_CONST '>' ID SCOL

    INT   shift, and go to state 4
    DCML  shift, and go to state 5
    BOOL  shift, and go to state 6
    STR   shift, and go to state 7

    data_type  go to state 82


State 49

   65 cond_stmt: IF '(' . expr ')' '{' stmt_list '}' cond_stmt2

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    expr              go to state 83
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 50

   68 loop_stmt: LP '(' . expr ')' statements

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    expr              go to state 84
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 51

   14 statements: '{' stmt_list . '}'
   16 stmt_list: stmt_list . stmt

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    INT         shift, and go to state 4
    DCML        shift, and go to state 5
    BOOL        shift, and go to state 6
    STR         shift, and go to state 7
    ID          shift, and go to state 14
    ARR         shift, and go to state 15
    IF          shift, and go to state 16
    LP          shift, and go to state 17
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20
    '}'         shift, and go to state 85

    stmt              go to state 86
    assign_stmt       go to state 24
    array_decl        go to state 25
    expressions       go to state 26
    expr              go to state 27
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    cond_stmt         go to state 37
    loop_stmt         go to state 38
    data_type         go to state 39
    constant          go to state 40


State 52

   17 stmt_list: stmt .

    $default  reduce using rule 17 (stmt_list)


State 53

   27 expressions: expr SCOL .

    $default  reduce using rule 27 (expressions)


State 54

   28 expr: variable ASSIGN . expr

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    expr              go to state 87
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 55

   29 expr: variable AEQ . expr

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    expr              go to state 88
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 56

   31 expr: variable MEQ . expr

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    expr              go to state 89
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 57

   30 expr: variable SEQ . expr

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    expr              go to state 90
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 58

   32 expr: variable DEQ . expr

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    expr              go to state 91
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 59

   33 expr: variable INCR .

    $default  reduce using rule 33 (expr)


State 60

   34 expr: variable DECR .

    $default  reduce using rule 34 (expr)


State 61

   40 arr_variable: arr_variable '[' . expr ']'

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    expr              go to state 92
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 62

   41 cond_or_stmt: cond_or_stmt OR . cond_and_stmt

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    variable          go to state 42
    arr_variable      go to state 29
    cond_and_stmt     go to state 93
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 63

   43 cond_and_stmt: cond_and_stmt AND . eql_stmt

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    variable          go to state 42
    arr_variable      go to state 29
    eql_stmt          go to state 94
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 64

   45 eql_stmt: eql_stmt EQ . comp_stmt

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    variable          go to state 42
    arr_variable      go to state 29
    comp_stmt         go to state 95
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 65

   46 eql_stmt: eql_stmt NEQ . comp_stmt

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    variable          go to state 42
    arr_variable      go to state 29
    comp_stmt         go to state 96
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 66

   52 comp_op: GEQ .

    $default  reduce using rule 52 (comp_op)


State 67

   53 comp_op: LEQ .

    $default  reduce using rule 53 (comp_op)


State 68

   51 comp_op: '<' .

    $default  reduce using rule 51 (comp_op)


State 69

   50 comp_op: '>' .

    $default  reduce using rule 50 (comp_op)


State 70

   48 comp_stmt: comp_stmt comp_op . arithmetic_stmt1

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    variable          go to state 42
    arr_variable      go to state 29
    arithmetic_stmt1  go to state 97
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 71

   54 arithmetic_stmt1: arithmetic_stmt1 ADD . arithmetic_stmt2

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    variable          go to state 42
    arr_variable      go to state 29
    arithmetic_stmt2  go to state 98
    unary_op_stmt     go to state 36
    constant          go to state 40


State 72

   55 arithmetic_stmt1: arithmetic_stmt1 SUB . arithmetic_stmt2

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    variable          go to state 42
    arr_variable      go to state 29
    arithmetic_stmt2  go to state 99
    unary_op_stmt     go to state 36
    constant          go to state 40


State 73

   57 arithmetic_stmt2: arithmetic_stmt2 MUL . unary_op_stmt

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    variable       go to state 42
    arr_variable   go to state 29
    unary_op_stmt  go to state 100
    constant       go to state 40


State 74

   58 arithmetic_stmt2: arithmetic_stmt2 DIV . unary_op_stmt

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    variable       go to state 42
    arr_variable   go to state 29
    unary_op_stmt  go to state 101
    constant       go to state 40


State 75

   25 L: ID .

    $default  reduce using rule 25 (L)


State 76

   23 assign_stmt: data_type L . SCOL
   24 L: L . ',' ID

    SCOL  shift, and go to state 102
    ','   shift, and go to state 103


State 77

    4 function: data_type ID '(' . params ')' statements

    INT   shift, and go to state 4
    DCML  shift, and go to state 5
    BOOL  shift, and go to state 6
    STR   shift, and go to state 7

    $default  reduce using rule 6 (params)

    params      go to state 104
    param_list  go to state 105
    param_type  go to state 106
    data_type   go to state 107


State 78

   37 variable: ID '(' args . ')'

    ')'  shift, and go to state 108


State 79

   10 args: arg_list .
   12 arg_list: arg_list . ',' expr

    ','  shift, and go to state 109

    $default  reduce using rule 10 (args)


State 80

   13 arg_list: expr .

    $default  reduce using rule 13 (arg_list)


State 81

   39 arr_variable: ID '[' expr . ']'

    ']'  shift, and go to state 110


State 82

   26 array_decl: ARR '<' data_type . ',' INT_CONST '>' ID SCOL

    ','  shift, and go to state 111


State 83

   65 cond_stmt: IF '(' expr . ')' '{' stmt_list '}' cond_stmt2

    ')'  shift, and go to state 112


State 84

   68 loop_stmt: LP '(' expr . ')' statements

    ')'  shift, and go to state 113


State 85

   14 statements: '{' stmt_list '}' .

    $default  reduce using rule 14 (statements)


State 86

   16 stmt_list: stmt_list stmt .

    $default  reduce using rule 16 (stmt_list)


State 87

   28 expr: variable ASSIGN expr .

    $default  reduce using rule 28 (expr)


State 88

   29 expr: variable AEQ expr .

    $default  reduce using rule 29 (expr)


State 89

   31 expr: variable MEQ expr .

    $default  reduce using rule 31 (expr)


State 90

   30 expr: variable SEQ expr .

    $default  reduce using rule 30 (expr)


State 91

   32 expr: variable DEQ expr .

    $default  reduce using rule 32 (expr)


State 92

   40 arr_variable: arr_variable '[' expr . ']'

    ']'  shift, and go to state 114


State 93

   41 cond_or_stmt: cond_or_stmt OR cond_and_stmt .
   43 cond_and_stmt: cond_and_stmt . AND eql_stmt

    AND  shift, and go to state 63

    $default  reduce using rule 41 (cond_or_stmt)


State 94

   43 cond_and_stmt: cond_and_stmt AND eql_stmt .
   45 eql_stmt: eql_stmt . EQ comp_stmt
   46         | eql_stmt . NEQ comp_stmt

    EQ   shift, and go to state 64
    NEQ  shift, and go to state 65

    $default  reduce using rule 43 (cond_and_stmt)


State 95

   45 eql_stmt: eql_stmt EQ comp_stmt .
   48 comp_stmt: comp_stmt . comp_op arithmetic_stmt1

    GEQ  shift, and go to state 66
    LEQ  shift, and go to state 67
    '<'  shift, and go to state 68
    '>'  shift, and go to state 69

    $default  reduce using rule 45 (eql_stmt)

    comp_op  go to state 70


State 96

   46 eql_stmt: eql_stmt NEQ comp_stmt .
   48 comp_stmt: comp_stmt . comp_op arithmetic_stmt1

    GEQ  shift, and go to state 66
    LEQ  shift, and go to state 67
    '<'  shift, and go to state 68
    '>'  shift, and go to state 69

    $default  reduce using rule 46 (eql_stmt)

    comp_op  go to state 70


State 97

   48 comp_stmt: comp_stmt comp_op arithmetic_stmt1 .
   54 arithmetic_stmt1: arithmetic_stmt1 . ADD arithmetic_stmt2
   55                 | arithmetic_stmt1 . SUB arithmetic_stmt2

    ADD  shift, and go to state 71
    SUB  shift, and go to state 72

    $default  reduce using rule 48 (comp_stmt)


State 98

   54 arithmetic_stmt1: arithmetic_stmt1 ADD arithmetic_stmt2 .
   57 arithmetic_stmt2: arithmetic_stmt2 . MUL unary_op_stmt
   58                 | arithmetic_stmt2 . DIV unary_op_stmt

    MUL  shift, and go to state 73
    DIV  shift, and go to state 74

    $default  reduce using rule 54 (arithmetic_stmt1)


State 99

   55 arithmetic_stmt1: arithmetic_stmt1 SUB arithmetic_stmt2 .
   57 arithmetic_stmt2: arithmetic_stmt2 . MUL unary_op_stmt
   58                 | arithmetic_stmt2 . DIV unary_op_stmt

    MUL  shift, and go to state 73
    DIV  shift, and go to state 74

    $default  reduce using rule 55 (arithmetic_stmt1)


State 100

   57 arithmetic_stmt2: arithmetic_stmt2 MUL unary_op_stmt .

    $default  reduce using rule 57 (arithmetic_stmt2)


State 101

   58 arithmetic_stmt2: arithmetic_stmt2 DIV unary_op_stmt .

    $default  reduce using rule 58 (arithmetic_stmt2)


State 102

   23 assign_stmt: data_type L SCOL .

    $default  reduce using rule 23 (assign_stmt)


State 103

   24 L: L ',' . ID

    ID  shift, and go to state 115


State 104

    4 function: data_type ID '(' params . ')' statements

    ')'  shift, and go to state 116


State 105

    5 params: param_list .
    7 param_list: param_list . ',' param_type

    ','  shift, and go to state 117

    $default  reduce using rule 5 (params)


State 106

    8 param_list: param_type .

    $default  reduce using rule 8 (param_list)


State 107

    9 param_type: data_type . ID

    ID  shift, and go to state 118


State 108

   37 variable: ID '(' args ')' .

    $default  reduce using rule 37 (variable)


State 109

   12 arg_list: arg_list ',' . expr

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    ID          shift, and go to state 14
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    expr              go to state 119
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    constant          go to state 40


State 110

   39 arr_variable: ID '[' expr ']' .

    $default  reduce using rule 39 (arr_variable)


State 111

   26 array_decl: ARR '<' data_type ',' . INT_CONST '>' ID SCOL

    INT_CONST  shift, and go to state 120


State 112

   65 cond_stmt: IF '(' expr ')' . '{' stmt_list '}' cond_stmt2

    '{'  shift, and go to state 121


State 113

   68 loop_stmt: LP '(' expr ')' . statements

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    INT         shift, and go to state 4
    DCML        shift, and go to state 5
    BOOL        shift, and go to state 6
    STR         shift, and go to state 7
    ID          shift, and go to state 14
    ARR         shift, and go to state 15
    IF          shift, and go to state 16
    LP          shift, and go to state 17
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20
    '{'         shift, and go to state 21

    statements        go to state 122
    stmt              go to state 23
    assign_stmt       go to state 24
    array_decl        go to state 25
    expressions       go to state 26
    expr              go to state 27
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    cond_stmt         go to state 37
    loop_stmt         go to state 38
    data_type         go to state 39
    constant          go to state 40


State 114

   40 arr_variable: arr_variable '[' expr ']' .

    $default  reduce using rule 40 (arr_variable)


State 115

   24 L: L ',' ID .

    $default  reduce using rule 24 (L)


State 116

    4 function: data_type ID '(' params ')' . statements

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    INT         shift, and go to state 4
    DCML        shift, and go to state 5
    BOOL        shift, and go to state 6
    STR         shift, and go to state 7
    ID          shift, and go to state 14
    ARR         shift, and go to state 15
    IF          shift, and go to state 16
    LP          shift, and go to state 17
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20
    '{'         shift, and go to state 21

    statements        go to state 123
    stmt              go to state 23
    assign_stmt       go to state 24
    array_decl        go to state 25
    expressions       go to state 26
    expr              go to state 27
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    cond_stmt         go to state 37
    loop_stmt         go to state 38
    data_type         go to state 39
    constant          go to state 40


State 117

    7 param_list: param_list ',' . param_type

    INT   shift, and go to state 4
    DCML  shift, and go to state 5
    BOOL  shift, and go to state 6
    STR   shift, and go to state 7

    param_type  go to state 124
    data_type   go to state 107


State 118

    9 param_type: data_type ID .

    $default  reduce using rule 9 (param_type)


State 119

   12 arg_list: arg_list ',' expr .

    $default  reduce using rule 12 (arg_list)


State 120

   26 array_decl: ARR '<' data_type ',' INT_CONST . '>' ID SCOL

    '>'  shift, and go to state 125


State 121

   65 cond_stmt: IF '(' expr ')' '{' . stmt_list '}' cond_stmt2

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    INT         shift, and go to state 4
    DCML        shift, and go to state 5
    BOOL        shift, and go to state 6
    STR         shift, and go to state 7
    ID          shift, and go to state 14
    ARR         shift, and go to state 15
    IF          shift, and go to state 16
    LP          shift, and go to state 17
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    stmt_list         go to state 126
    stmt              go to state 52
    assign_stmt       go to state 24
    array_decl        go to state 25
    expressions       go to state 26
    expr              go to state 27
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    cond_stmt         go to state 37
    loop_stmt         go to state 38
    data_type         go to state 39
    constant          go to state 40


State 122

   68 loop_stmt: LP '(' expr ')' statements .

    $default  reduce using rule 68 (loop_stmt)


State 123

    4 function: data_type ID '(' params ')' statements .

    $default  reduce using rule 4 (function)


State 124

    7 param_list: param_list ',' param_type .

    $default  reduce using rule 7 (param_list)


State 125

   26 array_decl: ARR '<' data_type ',' INT_CONST '>' . ID SCOL

    ID  shift, and go to state 127


State 126

   16 stmt_list: stmt_list . stmt
   65 cond_stmt: IF '(' expr ')' '{' stmt_list . '}' cond_stmt2

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    INT         shift, and go to state 4
    DCML        shift, and go to state 5
    BOOL        shift, and go to state 6
    STR         shift, and go to state 7
    ID          shift, and go to state 14
    ARR         shift, and go to state 15
    IF          shift, and go to state 16
    LP          shift, and go to state 17
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20
    '}'         shift, and go to state 128

    stmt              go to state 86
    assign_stmt       go to state 24
    array_decl        go to state 25
    expressions       go to state 26
    expr              go to state 27
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    cond_stmt         go to state 37
    loop_stmt         go to state 38
    data_type         go to state 39
    constant          go to state 40


State 127

   26 array_decl: ARR '<' data_type ',' INT_CONST '>' ID . SCOL

    SCOL  shift, and go to state 129


State 128

   65 cond_stmt: IF '(' expr ')' '{' stmt_list '}' . cond_stmt2

    ELSE  shift, and go to state 130

    $default  reduce using rule 67 (cond_stmt2)

    cond_stmt2  go to state 131


State 129

   26 array_decl: ARR '<' data_type ',' INT_CONST '>' ID SCOL .

    $default  reduce using rule 26 (array_decl)


State 130

   66 cond_stmt2: ELSE . stmt

    ADD         shift, and go to state 11
    SUB         shift, and go to state 12
    NOT         shift, and go to state 13
    INT         shift, and go to state 4
    DCML        shift, and go to state 5
    BOOL        shift, and go to state 6
    STR         shift, and go to state 7
    ID          shift, and go to state 14
    ARR         shift, and go to state 15
    IF          shift, and go to state 16
    LP          shift, and go to state 17
    INT_CONST   shift, and go to state 18
    DCML_CONST  shift, and go to state 19
    STR_CONST   shift, and go to state 20

    stmt              go to state 132
    assign_stmt       go to state 24
    array_decl        go to state 25
    expressions       go to state 26
    expr              go to state 27
    variable          go to state 28
    arr_variable      go to state 29
    cond_or_stmt      go to state 30
    cond_and_stmt     go to state 31
    eql_stmt          go to state 32
    comp_stmt         go to state 33
    arithmetic_stmt1  go to state 34
    arithmetic_stmt2  go to state 35
    unary_op_stmt     go to state 36
    cond_stmt         go to state 37
    loop_stmt         go to state 38
    data_type         go to state 39
    constant          go to state 40


State 131

   65 cond_stmt: IF '(' expr ')' '{' stmt_list '}' cond_stmt2 .

    $default  reduce using rule 65 (cond_stmt)


State 132

   66 cond_stmt2: ELSE stmt .

    $default  reduce using rule 66 (cond_stmt2)
